# serving/workflow.yaml
main:
  steps:
    - init:
        assign:
          - project_id: "profitscout-lx6bb"
          - region: "us-central1"
          - score_aggregator_name: "score-aggregator"
          - data_cruncher_name: "run-data-cruncher"
          - recommendations_generator_name: "recommendations-generator"
          - page_generator_name: "page-generator"
          - dashboard_generator_name: "run-dashboard-generator"
          - data_bundler_name: "data-bundler"

    # Step 1: Run the initial data processing jobs in parallel
    - parallel_initial_processing:
        parallel:
          branches:
            - run_score_aggregator:
                steps:
                  - call_score_aggregator:
                      call: http.post
                      args:
                        url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + score_aggregator_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: score_aggregator_result
            - run_data_cruncher:
                steps:
                  - call_data_cruncher:
                      call: http.post
                      args:
                        url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + data_cruncher_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: data_cruncher_result

    # Step 2: Generate the stock-level recommendations (depends on score_aggregator)
    - call_recommendations_generator:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + recommendations_generator_name}
          auth: { type: OIDC }
          timeout: 1800 # Increased timeout for LLM-heavy task
        result: recommendations_result

    # Step 3: Generate the page JSON (depends on recommendations_generator)
    - call_page_generator:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + page_generator_name}
          auth: { type: OIDC }
          timeout: 1800 # Increased timeout for LLM-heavy task
        result: page_result

    # Step 4: Generate the final dashboard JSON (depends on data_cruncher and recommendations)
    - call_dashboard_generator:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + dashboard_generator_name}
          auth: { type: OIDC }
          timeout: 1800 # Increased timeout for LLM-heavy task
        result: dashboard_result

    # Step 5: Bundle all generated assets and metadata (Final Step)
    - call_data_bundler:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + data_bundler_name}
          auth: { type: OIDC }
          timeout: 900
        result: data_bundler_result

    - log_finish:
        call: sys.log
        args:
          text: "Serving layer (data generation) workflow finished successfully."

    - done:
        return: "Workflow finished successfully."