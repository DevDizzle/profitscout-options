main:
  steps:
    - init:
        assign:
          - project_id: "profitscout-lx6bb"
          - region: "us-central1"
          - options_fetcher_name: "options-fetcher"
          - options_feature_engineering_name: "run-options-feature-engineering"
          - options_selector_name: "options-selector"
          - options_analyzer_name: "options-analyzer"
          - winners_dashboard_generator_name: "run-winners-dashboard-generator"
          # Added for the performance tracker
          - performance_tracker_updater_name: "run-performance-tracker-updater"
          - sync_performance_tracker_to_firestore_name: "run-sync-performance-tracker-to-firestore"
          # Existing sync functions
          - sync_to_firestore_name: "sync-to-firestore"
          - sync_options_to_firestore_name: "run-sync-options-to-firestore"
          - sync_calendar_to_firestore_name: "run-sync-calendar-to-firestore"
          - sync_winners_to_firestore_name: "run-sync-winners-to-firestore"
          - sync_options_candidates_to_firestore_name: "run-sync-options-candidates-to-firestore"

    # Step 1: Run the options data pipeline
    - call_options_fetcher:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + options_fetcher_name}
          auth: { type: OIDC }
          timeout: 1800
        result: options_fetcher_result

    - call_options_feature_engineering:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + options_feature_engineering_name}
          auth: { type: OIDC }
          timeout: 1800
        result: options_feature_engineering_result

    - call_options_selector:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + options_selector_name}
          auth: { type: OIDC }
          timeout: 900
        result: options_selector_result

    - call_options_analyzer:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + options_analyzer_name}
          auth: { type: OIDC }
          timeout: 1800
        result: options_analyzer_result

    # Step 2: Generate the main winners dashboard table
    - call_winners_dashboard_generator:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + winners_dashboard_generator_name}
          auth: { type: OIDC }
          timeout: 900
        result: winners_dashboard_result

    # Step 3: Update the performance tracker (depends on winners dashboard)
    - call_performance_tracker_updater:
        call: http.post
        args:
          url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + performance_tracker_updater_name}
          auth: { type: OIDC }
          timeout: 900
        result: performance_tracker_result

    # Step 4: Sync all final data to Firestore in parallel
    - final_sync_to_firestore:
        parallel:
          branches:
            - run_sync_main:
                steps:
                  - call_sync_to_firestore:
                      call: http.post
                      args:
                        url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                        body:
                          full_reset: false
                      result: sync_main_result
            - run_sync_options:
                steps:
                  - call_sync_options_to_firestore:
                      call: http.post
                      args:
                        url: ${"https://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_options_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                        body:
                          full_reset: false
                      result: sync_options_result
            - run_sync_calendar:
                steps:
                  - call_sync_calendar_to_firestore:
                      call: http.post
                      args:
                        url: ${"https" + "://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_calendar_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: sync_calendar_result
            - run_sync_winners:
                steps:
                  - call_sync_winners_to_firestore:
                      call: http.post
                      args:
                        url: ${"https" + "://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_winners_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: sync_winners_result
            - run_sync_options_candidates:
                steps:
                  - call_sync_options_candidates_to_firestore:
                      call: http.post
                      args:
                        url: ${"https" + "://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_options_candidates_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: sync_options_candidates_result
            # New branch to sync performance data
            - run_sync_performance_tracker:
                steps:
                  - call_sync_performance_tracker_to_firestore:
                      call: http.post
                      args:
                        url: ${"https" + "://" + region + "-" + project_id + ".cloudfunctions.net/" + sync_performance_tracker_to_firestore_name}
                        auth: { type: OIDC }
                        timeout: 900
                      result: sync_performance_tracker_result

    - log_finish:
        call: sys.log
        args:
          text: "Options and Final Sync workflow finished successfully."

    - done:
        return: "Workflow finished successfully."